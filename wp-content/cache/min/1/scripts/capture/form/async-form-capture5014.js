(function(){'use strict';const baseDomain='https://app.leadlovers.com'
var hasPhoneInputWithDDI=null;function appendMaskDefault(){var scriptElement=document.createElement('script');scriptElement.src=`${baseDomain}/scripts/capture/imask.js`;scriptElement.onload=function(){setPhoneMask()};document.body.appendChild(scriptElement)}
function appendMaskDDI(){var link=document.createElement('link');link.rel='stylesheet';link.href=`${baseDomain}/scripts/capture/intlTelInput/intlTelInput-generic.css`;document.head.appendChild(link);var scriptElement=document.createElement('script');scriptElement.src=`${baseDomain}/scripts/capture/intlTelInput/intlTelInput.min.js`;scriptElement.onload=function(){setPhoneMaskDDI()};document.body.appendChild(scriptElement)}
function setPhoneMaskDDI(){const phoneInputField=document.querySelector('#phone');if(!phoneInputField)return
hasPhoneInputWithDDI=window.intlTelInput(phoneInputField,{initialCountry:"br",utilsScript:`${baseDomain}/scripts/capture/intlTelInput/utils.js`,i18n:{br:"Brasil",fr:"França",us:"Estados Unidos",es:"Espanha",selectCountryAriaLabel:'País selecionado',countryListAriaLabel:'Lista de países',searchPlaceholder:'Pesquisar'}})}
function setPhoneMask(){const phoneInputField=document.querySelector("#phone");if(!phoneInputField)return
const valorPadrao='+55'
if(phoneInputField.value==='')phoneInputField.value=valorPadrao;phoneInputField.addEventListener('input',function(){if(phoneInputField.value===''){phoneInputField.value=valorPadrao}});var maskOptions={mask:[{mask:'+00 (00) 00000-0000',startsWith:'55',lazy:!1},{mask:'+0000000000000000000000000',startsWith:'',}],dispatch:function(appended,dynamicMasked){var number=(dynamicMasked.value+appended).replace(/\D/g,'');return dynamicMasked.compiledMasks.find(function(m){return number.indexOf(m.startsWith)===0})}};IMask(phoneInputField,maskOptions)}
function importPhoneMaskFile(){const usePhoneMask=document.querySelector("#usePhoneMask");const hasMask=document.querySelector("[data-maskWithDDI]");if(hasMask){var maskWithDDI=hasMask.getAttribute('data-maskWithDDI');if(maskWithDDI=='true'){appendMaskDDI();return}}
if(!usePhoneMask)return;appendMaskDefault()}
function removeInvalidCharacters(){const phoneInputField=document.querySelector("#phone");if(phoneInputField){phoneInputField.value=phoneInputField.value.replace(/\+/g,'');if(hasPhoneInputWithDDI){var phoneNumberWithDDI=hasPhoneInputWithDDI.getNumber();phoneInputField.value=phoneNumberWithDDI.replace(/\+/g,'')}}}
function addSubmitHandler(form){const genericLink=form.querySelector('a[href="#"]');const genericSpan=form.querySelector('span[href="#"]');const submitButton=form.querySelector('button[type="submit"]');const genericButton=form.querySelector('button');if(genericLink){console.info('handling generic link...',genericLink);genericLink.addEventListener('click',function(event){handleSubmit(form,event)})}else if(genericSpan){console.info('handling generic span...',genericSpan);genericSpan.addEventListener('click',function(event){handleSubmit(form,event)})}else if(submitButton){console.info('handling submit button...',submitButton);submitButton.addEventListener('click',function(event){handleSubmit(form,event)})}else if(genericButton){console.info('handling generic button...',genericButton);genericButton.addEventListener('click',function(event){handleSubmit(form,event)})}else{console.info('handling submit form...',form);form.addEventListener('submit',function(event){handleSubmit(form,event)})}}
function clearErrors(form){const errorContainers=form.querySelectorAll('div[class="error-container"]');if(errorContainers&&errorContainers.length>0){for(const errorContainer of errorContainers){errorContainer.remove()}}}
function clearGenericErrors(){window.location.reload()}
function clearLoading(form){const loading=form.querySelector('div[class="loading"]');if(loading){loading.remove();form.querySelector('[type="submit"], button').disabled=!1}}
function decodeRedirectUrl(url){const elem=document.createElement('textarea');elem.innerHTML=url;const decodedUrl=elem.value;return decodedUrl}
function validatePhoneNumber(){return new Promise((resolve,reject)=>{const phoneInputField=document.querySelector('#phone');const hasMask=document.querySelector("[data-maskWithDDI]");if(!phoneInputField||!hasMask){resolve(!0);return}
if(phoneInputField.value.length>=1){const iti=window.intlTelInputGlobals.getInstance(phoneInputField);const isValid=iti.isValidNumber();const container=document.querySelector('.iti--allow-dropdown')
resetError(container);if(isValid){resolve(!0)}else{const errObj=document.createElement('div');errObj.className='error-container';errObj.innerText='Invalid phone number';container.after(errObj);reject(errObj.innerText)}}else{resolve(!0)}})}
function resetError(el){const nextElement=el.nextElementSibling;if(nextElement&&nextElement.classList.contains('error-container')){nextElement.remove()}}
async function handleSubmit(form,event){event.preventDefault();event.stopPropagation();setLoading(form);try{await validatePhoneNumber();removeInvalidCharacters();submitForm(form)}catch(error){clearLoading(form);console.error(error)}}
function loadForms(){if(!window.ll_form_loaded){window.ll_form_loaded=!0;importPhoneMaskFile();const forms=document.querySelectorAll('form[action$="capture"]');if(forms&&forms.length){forms.forEach(form=>{addSubmitHandler(form);loadFormAdditionalData(form)})}}}
function loadFormAdditionalData(form){let originField=form.querySelector('#origin');if(!originField){originField=document.createElement('input');originField.setAttribute('id','origin');originField.setAttribute('name','origin');originField.setAttribute('type','hidden');originField.setAttribute('value',window.location.href);form.appendChild(originField)}}
function setLoading(form){const submitButton=form.querySelector('[type="submit"], button');if(submitButton){const loading=document.createElement('div');const loader=document.createElement('div');loader.className='loader';loading.className='loading';loading.appendChild(loader);submitButton.appendChild(loading);submitButton.disabled=!0}}
function submitForm(form){const url=form.action;const method=form.method;const data=new FormData(form);const xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(this.readyState===XMLHttpRequest.DONE&&xhr.status===200){let result;if(this.response.includes('redirectUrl')){const resultRows=this.response.split('\n');const resultRow=resultRows.find(row=>row.trim().startsWith('{"redirectUrl"'));result=JSON.parse(resultRow)}else{result=JSON.parse(this.response)}
clearErrors(form);if(result.redirectUrl){const redirectUrl=decodeRedirectUrl(result.redirectUrl);if(window.top){window.top.location.href=redirectUrl}else{window.location.href=redirectUrl}}else if(result.errors&&result.errors.length>0){const genericErrors=[];result.errors.forEach(function(error){if(error.field){const field=form.querySelector(`#${error.field}`);if(field){const errObj=document.createElement('div');errObj.className='error-container';errObj.innerText=error.error;field.after(errObj)}else{genericErrors.push(error.error)}}else{genericErrors.push(error.error)}});if(genericErrors.length){const genericErrorContainer=document.createElement('div');const genericErrorButton=document.createElement('button');const errorsList=document.createElement('ul');genericErrors.forEach(function(err){const errorItem=document.createElement('li');errorItem.innerText=err;errorsList.appendChild(errorItem)});genericErrorButton.type='button';genericErrorButton.innerText='voltar';genericErrorButton.addEventListener('click',clearGenericErrors);genericErrorContainer.className='generic-errors-container';genericErrorContainer.appendChild(errorsList);genericErrorContainer.appendChild(genericErrorButton);form.appendChild(genericErrorContainer)}
clearLoading(form)}else{if(window.top){window.top.location.href=result}else{window.location.href=result}}}};xhr.open(method,url,!0);xhr.send(data)}
if(document.readystate==='complete'){loadForms()}else{window.addEventListener('load',loadForms)}})()